'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2407
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2407.
'
Namespace storage
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://tempuri.org/")>  _
    Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://storage/ImagingServiceVB/Service1.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MoveFile(ByVal SoucePath As String, ByVal SourceFileName As String, ByVal TargetPath As String, ByVal TargetFileName As String, ByVal UserName As String, ByVal TranID As String) As String
            Dim results() As Object = Me.Invoke("MoveFile", New Object() {SoucePath, SourceFileName, TargetPath, TargetFileName, UserName, TranID})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginMoveFile(ByVal SoucePath As String, ByVal SourceFileName As String, ByVal TargetPath As String, ByVal TargetFileName As String, ByVal UserName As String, ByVal TranID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MoveFile", New Object() {SoucePath, SourceFileName, TargetPath, TargetFileName, UserName, TranID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndMoveFile(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFaxestoProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFaxestoProcess(ByVal stringtoCombine As String, ByVal BaseFaxNumber As String) As String
            Dim results() As Object = Me.Invoke("GetFaxestoProcess", New Object() {stringtoCombine, BaseFaxNumber})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetFaxestoProcess(ByVal stringtoCombine As String, ByVal BaseFaxNumber As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFaxestoProcess", New Object() {stringtoCombine, BaseFaxNumber}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFaxestoProcess(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFaxestoProcess_CS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFaxestoProcess_CS(ByVal stringtoCombine As String) As String
            Dim results() As Object = Me.Invoke("GetFaxestoProcess_CS", New Object() {stringtoCombine})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginGetFaxestoProcess_CS(ByVal stringtoCombine As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFaxestoProcess_CS", New Object() {stringtoCombine}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFaxestoProcess_CS(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFdfFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveFdfFile( _
                    ByVal scrPath As String,  _
                    ByVal tmpPath As String,  _
                    ByVal FileName As String,  _
                    ByVal username As String,  _
                    ByVal pdfPrinter As String,  _
                    ByVal agrno As String,  _
                    ByVal strEFAClndYear As String,  _
                    ByVal strEFAAmt As String,  _
                    ByVal SIN As String,  _
                    ByVal LastName As String,  _
                    ByVal firstname As String,  _
                    ByVal Address As String,  _
                    ByVal CityProvPostcode As String,  _
                    ByVal Country As String,  _
                    ByVal BusNo As String,  _
                    ByVal Payer As String) As String
            Dim results() As Object = Me.Invoke("SaveFdfFile", New Object() {scrPath, tmpPath, FileName, username, pdfPrinter, agrno, strEFAClndYear, strEFAAmt, SIN, LastName, firstname, Address, CityProvPostcode, Country, BusNo, Payer})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginSaveFdfFile( _
                    ByVal scrPath As String,  _
                    ByVal tmpPath As String,  _
                    ByVal FileName As String,  _
                    ByVal username As String,  _
                    ByVal pdfPrinter As String,  _
                    ByVal agrno As String,  _
                    ByVal strEFAClndYear As String,  _
                    ByVal strEFAAmt As String,  _
                    ByVal SIN As String,  _
                    ByVal LastName As String,  _
                    ByVal firstname As String,  _
                    ByVal Address As String,  _
                    ByVal CityProvPostcode As String,  _
                    ByVal Country As String,  _
                    ByVal BusNo As String,  _
                    ByVal Payer As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SaveFdfFile", New Object() {scrPath, tmpPath, FileName, username, pdfPrinter, agrno, strEFAClndYear, strEFAAmt, SIN, LastName, firstname, Address, CityProvPostcode, Country, BusNo, Payer}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSaveFdfFile(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetUser(ByVal TargetPath As String, ByVal UserName As String, ByVal tranid As String) As String
            Dim results() As Object = Me.Invoke("SetUser", New Object() {TargetPath, UserName, tranid})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginSetUser(ByVal TargetPath As String, ByVal UserName As String, ByVal tranid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetUser", New Object() {TargetPath, UserName, tranid}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetUser(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUserFolder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetUserFolder(ByVal tranid As String) As String
            Dim results() As Object = Me.Invoke("SetUserFolder", New Object() {tranid})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginSetUserFolder(ByVal tranid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetUserFolder", New Object() {tranid}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSetUserFolder(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
    End Class
End Namespace
